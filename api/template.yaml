AWSTemplateFormatVersion: 2010-09-09
Description: 3keys-api
Transform: AWS::Serverless-2016-10-31

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: nodejs20.x
    Architectures:
      - x86_64
    MemorySize: 128
    Timeout: 30
    VpcConfig:
      SubnetIds:
        - Fn::Sub: "{{resolve:secretsmanager:customer-secrets-${AWSENV}:SecretString:subnet1}}"
        - Fn::Sub: "{{resolve:secretsmanager:customer-secrets-${AWSENV}:SecretString:subnet2}}"
        - Fn::Sub: "{{resolve:secretsmanager:customer-secrets-${AWSENV}:SecretString:subnet3}}"
        # Fn::Split:
        #   - ','
        #   - Fn::ImportValue:
        #       Fn::Sub: ds-infra-network-subnetids-${AWSENV}
      SecurityGroupIds:
        - Ref: CustomerSG


Parameters:
  AWSENV:
    Type: String
    AllowedValues:
      - dev
      - staging
      - prod
      - local
    Default: local

# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-all-items.js
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Description: HTTP GET method to get all items from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET

  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Description: HTTP GET method to get one item by id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET

  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Description: HTTP POST method to add one item to a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE: !Ref SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST

  #BEGIN: Secrets
  CustomerSecrets:
    Type: AWS::SecretsManager::Secret
    Properties: 
      Description: Secrets for customer
      Name:
        Fn::Sub: secrets-${AWSENV}
  #END: Secrets

  #BEGIN: DynamoDB tables
  CustomerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: customers-${AWSENV}
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
  #END: DynamoDB tables

Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
